// This file was autogenerated by `generate_filterrules.py` from
// {{ url }}
// Commit: {{ commit_sha }}
// URL: {{ commit_url }}
// Date: {{ commit_date }}
// DO NOT MODIFY BY HAND

import Foundation


enum FilterRuleType : RawRepresentable, Equatable, CaseIterable, Hashable {
  init?(rawValue: Int) {
    self = switch rawValue {
    {%- for rule in rule_types | sort(attribute="id") %}
      case {{ rule.id }}: .{{ rule.swift_name }}
    {%- endfor %}

      default: .other(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
      {%- for rule in rule_types %}
      case .{{ rule.swift_name }}: {{ rule.id }}
      {%- endfor %}

      case .other(let value): value
    }
  }

  static let allCases: [FilterRuleType] = [
      {%- for rule in rule_types | sort(attribute="id") %}
      .{{ rule.swift_name }},
      {%- endfor %}
  ]

  enum DataType {
      {%- for dataType in rule_types|map(attribute='datatype')|unique|sort %}
      case {{ dataType }}
      {%- endfor %}
  }

{%- for rule in rule_types %}
  case {{ rule.swift_name }}
{%- endfor %}
  case other(Int)

 func filterVar() -> String? {
    switch self {
      {%- for rule in rule_types %}
      case .{{ rule.swift_name }}: "{{ rule.filtervar }}"
      {%- endfor %}

      default: nil
    }
  }

 func dataType() -> DataType {
    switch self {
      {%- for rule in rule_types %}
      case .{{ rule.swift_name }}: .{{ rule.datatype }}
      {%- endfor %}

      default: .string
    }
  }

 func defaultValue() -> Bool {
    switch self {
      {%- for rule in rule_types | selectattr("default") %}
      case .{{ rule.swift_name }}: true
      {%- endfor %}

      default: false
    }
  }

 func multiple() -> Bool {
    switch self {
      {%- for rule in rule_types | selectattr("multi") %}
      case .{{ rule.swift_name }}: true
      {%- endfor %}

      default: false
    }
  }

  static func allMultiples() -> Set<FilterRuleType> {
    [
      {%- for rule in rule_types | selectattr("multi") %}
      .{{ rule.swift_name }},
      {%- endfor %}
    ]
  }

 func isNullFilterVar() -> String? {
    switch self {
      {%- for rule in rule_types | selectattr("isnull_filtervar") %}
      case .{{ rule.swift_name }}: "{{ rule.isnull_filtervar }}"
      {%- endfor %}

      default: nil
    }
  }
}
